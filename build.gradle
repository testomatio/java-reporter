plugins {
    id 'java'
    id 'java-library'
    id 'maven-publish'
    id 'org.jreleaser' version '1.16.0'
}

allprojects {
    group = 'io.testomat'
    version = '0.4.1'

    repositories {
        mavenCentral()
    }

    tasks.register("jreleaserReleaseAll") {
        dependsOn subprojects.findAll { it.plugins.hasPlugin("org.jreleaser") }
                .collect { it.tasks.matching { it.name == "jreleaserFullRelease" } }
    }

}

//tasks.register("updateReadmeVersion") {
//    doLast {
//        def readmeFile = file("README.md")
//        def content = readmeFile.text
//        content = content.replaceAll("<!--VERSION_PLACEHOLDER-->", project.version)
//        readmeFile.text = content
//        println "✅ Updated README.md with version: $version"
//    }
//}
//
//tasks.named("publish").configure { dependsOn "updateReadmeVersion" }

subprojects {

    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'
    apply plugin: 'org.jreleaser'

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(17)
        }
        withJavadocJar()
        withSourcesJar()
    }

    test {
        useTestNG()
    }

    tasks.register("createJReleaserDir") {
        doLast {
            def jreleaserDir = layout.buildDirectory.dir("jreleaser").get().asFile
            if (!jreleaserDir.exists()) {
                jreleaserDir.mkdirs()
                println("✅ Created JReleaser directory: " + jreleaserDir.absolutePath)
            }
        }
    }

    tasks.named("jreleaserFullRelease").configure {
        dependsOn("createJReleaserDir")
    }


    publishing {
        publications {
            maven(MavenPublication) {
                from components.java

                pom {
                    name = project.name
                    description = "Module ${project.name} of the Testomatio project"
                    url = 'https://github.com/testomatio/java-reporter"'
                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id = 'LolikTest'
                            name = 'Oleksii Lakovych'
                            email = 'lolikla8@gmail.com'
                        }
                    }
                    scm {
                        connection = 'scm:git:git//github.com/testomatio/java-reporter'
                        developerConnection = 'scm:git:ssh://github.com/LolikTest'
                        url = 'https://github.com/testomatio/java-reporter'
                    }
                }
            }
        }

        repositories {
            maven {
                url = layout.buildDirectory.dir('staging-deploy')
            }
        }
    }


    jreleaser {
        setBuildDir(layout.buildDirectory.get().asFile)
        gitRootSearch = true
     /*   release {
            github {
                enabled = false;
            }
        }*/
        signing {
            active = 'ALWAYS'
            armored = true
        }
        deploy {
            maven {
                mavenCentral {
                    app {
                        active = 'ALWAYS'
                        url = 'https://central.sonatype.com/api/v1/publisher'
                        stagingRepository('build/staging-deploy')
                        retryDelay = 30
                    }
                }
            }
        }
    }
}